/* tslint:disable */
/* eslint-disable */

/**
 * GeoNetwork API
 * This API exposes endpoints to GeoNetwork API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface GnRecordLink
 */
export interface GnRecordLink {
  /**
   *
   * @type {string}
   * @memberof GnRecordLink
   */
  type?: string;
  /**
   *
   * @type {string}
   * @memberof GnRecordLink
   */
  origin?: GnRecordLinkOriginEnum;
  /**
   *
   * @type {string}
   * @memberof GnRecordLink
   */
  to?: string;
  /**
   *
   * @type {string}
   * @memberof GnRecordLink
   */
  title?: string;
  /**
   *
   * @type {string}
   * @memberof GnRecordLink
   */
  url?: string;
  /**
   *
   * @type {string}
   * @memberof GnRecordLink
   */
  associationType?: string;
  /**
   *
   * @type {string}
   * @memberof GnRecordLink
   */
  initiativeType?: string;
}

/**
 * @export
 */
export const GnRecordLinkOriginEnum = {
  Remote: 'remote',
  Catalog: 'catalog',
} as const;
export type GnRecordLinkOriginEnum =
  (typeof GnRecordLinkOriginEnum)[keyof typeof GnRecordLinkOriginEnum];

/**
 * Check if a given object implements the GnRecordLink interface.
 */
export function instanceOfGnRecordLink(value: object): value is GnRecordLink {
  return true;
}

export function GnRecordLinkFromJSON(json: any): GnRecordLink {
  return GnRecordLinkFromJSONTyped(json, false);
}

export function GnRecordLinkFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): GnRecordLink {
  if (json == null) {
    return json;
  }
  return {
    type: json['type'] == null ? undefined : json['type'],
    origin: json['origin'] == null ? undefined : json['origin'],
    to: json['to'] == null ? undefined : json['to'],
    title: json['title'] == null ? undefined : json['title'],
    url: json['url'] == null ? undefined : json['url'],
    associationType:
      json['associationType'] == null ? undefined : json['associationType'],
    initiativeType:
      json['initiativeType'] == null ? undefined : json['initiativeType'],
  };
}

export function GnRecordLinkToJSON(value?: GnRecordLink | null): any {
  if (value == null) {
    return value;
  }
  return {
    type: value['type'],
    origin: value['origin'],
    to: value['to'],
    title: value['title'],
    url: value['url'],
    associationType: value['associationType'],
    initiativeType: value['initiativeType'],
  };
}
