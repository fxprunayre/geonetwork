/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork API
 * This API exposes endpoints to GeoNetwork API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { GnPartyIdentifier } from './GnPartyIdentifier';
import {
  GnPartyIdentifierFromJSON,
  GnPartyIdentifierToJSON,
} from './GnPartyIdentifier';

/**
 *
 * @export
 * @interface GnContact
 */
export interface GnContact {
  /**
   *
   * @type {string}
   * @memberof GnContact
   */
  role?: string;
  /**
   *
   * @type {string}
   * @memberof GnContact
   */
  individual?: string;
  /**
   *
   * @type {string}
   * @memberof GnContact
   */
  email?: string;
  /**
   *
   * @type {string}
   * @memberof GnContact
   */
  logo?: string;
  /**
   *
   * @type {string}
   * @memberof GnContact
   */
  phone?: string;
  /**
   *
   * @type {string}
   * @memberof GnContact
   */
  address?: string;
  /**
   *
   * @type {string}
   * @memberof GnContact
   */
  website?: string;
  /**
   *
   * @type {string}
   * @memberof GnContact
   */
  position?: string;
  /**
   *
   * @type {string}
   * @memberof GnContact
   */
  nilReason?: string;
  /**
   *
   * @type {{ [key: string]: string; }}
   * @memberof GnContact
   */
  organisationObject?: { [key: string]: string };
  /**
   *
   * @type {Array<GnPartyIdentifier>}
   * @memberof GnContact
   */
  identifiers?: Array<GnPartyIdentifier>;
}

/**
 * Check if a given object implements the GnContact interface.
 */
export function instanceOfGnContact(value: object): value is GnContact {
  return true;
}

export function GnContactFromJSON(json: any): GnContact {
  return GnContactFromJSONTyped(json, false);
}

export function GnContactFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): GnContact {
  if (json == null) {
    return json;
  }
  return {
    role: json['role'] == null ? undefined : json['role'],
    individual: json['individual'] == null ? undefined : json['individual'],
    email: json['email'] == null ? undefined : json['email'],
    logo: json['logo'] == null ? undefined : json['logo'],
    phone: json['phone'] == null ? undefined : json['phone'],
    address: json['address'] == null ? undefined : json['address'],
    website: json['website'] == null ? undefined : json['website'],
    position: json['position'] == null ? undefined : json['position'],
    nilReason: json['nilReason'] == null ? undefined : json['nilReason'],
    organisationObject:
      json['organisationObject'] == null
        ? undefined
        : json['organisationObject'],
    identifiers:
      json['identifiers'] == null
        ? undefined
        : (json['identifiers'] as Array<any>).map(GnPartyIdentifierFromJSON),
  };
}

export function GnContactToJSON(value?: GnContact | null): any {
  if (value == null) {
    return value;
  }
  return {
    role: value['role'],
    individual: value['individual'],
    email: value['email'],
    logo: value['logo'],
    phone: value['phone'],
    address: value['address'],
    website: value['website'],
    position: value['position'],
    nilReason: value['nilReason'],
    organisationObject: value['organisationObject'],
    identifiers:
      value['identifiers'] == null
        ? undefined
        : (value['identifiers'] as Array<any>).map(GnPartyIdentifierToJSON),
  };
}
