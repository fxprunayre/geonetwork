/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork API
 * This API exposes endpoints to GeoNetwork API.
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface GnBaseDataInfo
 */
export interface GnBaseDataInfo {
  /**
   *
   * @type {string}
   * @memberof GnBaseDataInfo
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof GnBaseDataInfo
   */
  format?: string;
  /**
   *
   * @type {string}
   * @memberof GnBaseDataInfo
   */
  formatDescription?: string;
  /**
   *
   * @type {string}
   * @memberof GnBaseDataInfo
   */
  dataType?: GnBaseDataInfoDataTypeEnum;
}

/**
 * @export
 */
export const GnBaseDataInfoDataTypeEnum = {
  Raster: 'RASTER',
  Vector: 'VECTOR',
} as const;
export type GnBaseDataInfoDataTypeEnum =
  (typeof GnBaseDataInfoDataTypeEnum)[keyof typeof GnBaseDataInfoDataTypeEnum];

/**
 * Check if a given object implements the GnBaseDataInfo interface.
 */
export function instanceOfGnBaseDataInfo(
  value: object
): value is GnBaseDataInfo {
  return true;
}

export function GnBaseDataInfoFromJSON(json: any): GnBaseDataInfo {
  return GnBaseDataInfoFromJSONTyped(json, false);
}

export function GnBaseDataInfoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): GnBaseDataInfo {
  if (json == null) {
    return json;
  }
  return {
    description: json['description'] == null ? undefined : json['description'],
    format: json['format'] == null ? undefined : json['format'],
    formatDescription:
      json['formatDescription'] == null ? undefined : json['formatDescription'],
    dataType: json['dataType'] == null ? undefined : json['dataType'],
  };
}

export function GnBaseDataInfoToJSON(value?: GnBaseDataInfo | null): any {
  if (value == null) {
    return value;
  }
  return {
    description: value['description'],
    format: value['format'],
    formatDescription: value['formatDescription'],
    dataType: value['dataType'],
  };
}
