/* tslint:disable */
/* eslint-disable */
/**
 * GeoNetwork API
 * This API exposes endpoints to GeoNetwork API.
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: geonetwork-users@lists.sourceforge.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GnDatasetLayerField } from './GnGnDatasetLayerField';
import {
    GnDatasetLayerFieldFromJSON,
    GnDatasetLayerFieldFromJSONTyped,
    GnDatasetLayerFieldToJSON,
} from './GnGnDatasetLayerField';
import type { GnDatasetLayerGeomField } from './GnGnDatasetLayerGeomField';
import {
    GnDatasetLayerGeomFieldFromJSON,
    GnDatasetLayerGeomFieldFromJSONTyped,
    GnDatasetLayerGeomFieldToJSON,
} from './GnGnDatasetLayerGeomField';

/**
 * 
 * @export
 * @interface GnDatasetLayer
 */
export interface GnDatasetLayer {
    /**
     * 
     * @type {string}
     * @memberof GnDatasetLayer
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof GnDatasetLayer
     */
    fidColumnName?: string;
    /**
     * 
     * @type {number}
     * @memberof GnDatasetLayer
     */
    featureCount?: number;
    /**
     * 
     * @type {Array<GnDatasetLayerField>}
     * @memberof GnDatasetLayer
     */
    fields?: Array<GnDatasetLayerField>;
    /**
     * 
     * @type {Array<GnDatasetLayerGeomField>}
     * @memberof GnDatasetLayer
     */
    geometryFields?: Array<GnDatasetLayerGeomField>;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof GnDatasetLayer
     */
    metadata?: { [key: string]: object; };
}

/**
 * Check if a given object implements the GnDatasetLayer interface.
 */
export function instanceOfGnDatasetLayer(value: object): value is GnDatasetLayer {
    return true;
}

export function GnDatasetLayerFromJSON(json: any): GnDatasetLayer {
    return GnDatasetLayerFromJSONTyped(json, false);
}

export function GnDatasetLayerFromJSONTyped(json: any, ignoreDiscriminator: boolean): GnDatasetLayer {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'fidColumnName': json['fidColumnName'] == null ? undefined : json['fidColumnName'],
        'featureCount': json['featureCount'] == null ? undefined : json['featureCount'],
        'fields': json['fields'] == null ? undefined : ((json['fields'] as Array<any>).map(GnDatasetLayerFieldFromJSON)),
        'geometryFields': json['geometryFields'] == null ? undefined : ((json['geometryFields'] as Array<any>).map(GnDatasetLayerGeomFieldFromJSON)),
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
    };
}

export function GnDatasetLayerToJSON(value?: GnDatasetLayer | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'fidColumnName': value['fidColumnName'],
        'featureCount': value['featureCount'],
        'fields': value['fields'] == null ? undefined : ((value['fields'] as Array<any>).map(GnDatasetLayerFieldToJSON)),
        'geometryFields': value['geometryFields'] == null ? undefined : ((value['geometryFields'] as Array<any>).map(GnDatasetLayerGeomFieldToJSON)),
        'metadata': value['metadata'],
    };
}

