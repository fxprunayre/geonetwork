/*
 * (c) 2003 Open Source Geospatial Foundation - all rights reserved
 * This code is licensed under the GPL 2.0 license,
 * available at the root application directory.
 */
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.7.0).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package org.geonetwork.tasks.ogcapi.processes.generated;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;
import java.util.Optional;
import org.geonetwork.tasks.ogcapi.processes.generated.model.OgcApiProcessesConfClassesDto;
import org.geonetwork.tasks.ogcapi.processes.generated.model.OgcApiProcessesExceptionDto;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

@Generated(
    value = "org.openapitools.codegen.languages.SpringCodegen",
    date = "2024-08-06T16:12:06.105974013+02:00[Europe/Paris]",
    comments = "Generator version: 7.7.0")
@Validated
@Tag(name = "ConformanceDeclaration", description = "the ConformanceDeclaration API")
public interface ConformanceApi {

  default Optional<NativeWebRequest> getRequest() {
    return Optional.empty();
  }

  /**
   * GET /conformance : information about standards that this API conforms to A list of all
   * conformance classes, specified in a standard, that the server conforms to. | Conformance class
   * | URI | |-----------|-------|
   * |Core|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/core| |OGC Process
   * Description|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/ogc-process-description|
   * |JSON|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/json|
   * |HTML|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/html| |OpenAPI Specification
   * 3.0|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/oas30| |Job
   * list|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/job-list|
   * |Callback|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/callback|
   * |Dismiss|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/dismiss| For more information,
   * see [Section 7.4](https://docs.ogc.org/is/18-062/18-062.html#sc_conformance_classes).
   *
   * @return The URIs of all conformance classes supported by the server. To support
   *     \&quot;generic\&quot; clients that want to access multiple OGC API - Processes
   *     implementations - and not \&quot;just\&quot; a specific API / server, the server declares
   *     the conformance classes it implements and conforms to. (status code 200) or A server error
   *     occurred. (status code 500)
   */
  @Operation(
      operationId = "getConformanceClasses",
      summary = "information about standards that this API conforms to",
      description =
          "A list of all conformance classes, specified in a standard, that the server conforms to."
              + "  | Conformance class | URI | |-----------|-------|"
              + " |Core|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/core| |OGC Process"
              + " Description|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/ogc-process-description|"
              + " |JSON|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/json|"
              + " |HTML|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/html| |OpenAPI"
              + " Specification 3.0|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/oas30|"
              + " |Job list|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/job-list|"
              + " |Callback|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/callback|"
              + " |Dismiss|http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/dismiss|  For"
              + " more information, see [Section"
              + " 7.4](https://docs.ogc.org/is/18-062/18-062.html#sc_conformance_classes). ",
      tags = {"ConformanceDeclaration"},
      responses = {
        @ApiResponse(
            responseCode = "200",
            description =
                "The URIs of all conformance classes supported by the server.  To support"
                    + " \"generic\" clients that want to access multiple OGC API - Processes"
                    + " implementations - and not \"just\" a specific API / server, the server"
                    + " declares the conformance classes it implements and conforms to.",
            content = {
              @Content(
                  mediaType = "application/json",
                  schema = @Schema(implementation = OgcApiProcessesConfClassesDto.class)),
              @Content(
                  mediaType = "text/html",
                  schema = @Schema(implementation = OgcApiProcessesConfClassesDto.class))
            }),
        @ApiResponse(
            responseCode = "500",
            description = "A server error occurred.",
            content = {
              @Content(
                  mediaType = "application/json",
                  schema = @Schema(implementation = OgcApiProcessesExceptionDto.class)),
              @Content(
                  mediaType = "text/html",
                  schema = @Schema(implementation = OgcApiProcessesExceptionDto.class))
            })
      })
  @RequestMapping(
      method = RequestMethod.GET,
      value = "/conformance",
      produces = {"application/json", "text/html"})
  default ResponseEntity<OgcApiProcessesConfClassesDto> getConformanceClasses() {

    getRequest()
        .ifPresent(
            request -> {
              for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                  String exampleString =
                      "{ \"conformsTo\" : ["
                          + " \"http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/core\","
                          + " \"http://www.opengis.net/spec/ogcapi-processes-1/1.0/conf/core\" ] }";
                  ApiUtil.setExampleResponse(request, "application/json", exampleString);
                  break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("text/html"))) {
                  String exampleString = "Custom MIME type example not yet supported: text/html";
                  ApiUtil.setExampleResponse(request, "text/html", exampleString);
                  break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                  String exampleString =
                      "{ \"instance\" : \"instance\", \"detail\" : \"detail\", \"type\" : \"type\","
                          + " \"title\" : \"title\", \"status\" : 0 }";
                  ApiUtil.setExampleResponse(request, "application/json", exampleString);
                  break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("text/html"))) {
                  String exampleString = "Custom MIME type example not yet supported: text/html";
                  ApiUtil.setExampleResponse(request, "text/html", exampleString);
                  break;
                }
              }
            });
    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
  }
}
